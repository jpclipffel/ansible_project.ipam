# code: language=Ansible insertSpaces=true tabSize=2

- hosts: nios
  connection: local
  collections:
    - infoblox.nios_modules
  tasks:

    - name: Assert arguments
      assert:
        that: "{{ item.test }}"
        fail_msg: "Rejected requested {{ item.name }}: '{{ item.data }}'"
        success_msg: "Accepted requested {{ item.name }}: '{{ item.data }}'"
      with_items:
        - name: "network view"
          data: "{{ request_view | default('BOPI-test') }}"
          test:
            - "item.data | length > 0"
        - name: "network"
          data: "{{ request_network | default('') }}"
          test:
            - "item.data | length > 0"
        - name: "DNS zone"
          data: "{{ request_zone | default('') }}"
          test:
            - "item.data | length > 0"
      tags: [always]

    - name: Assert network view
      assert:
        that:
          - item.data == "BOPI-test"
        fail_msg: "Not allowed to use this netrwork view."
        success_msg: "Network view BOPI-test"
      with_items:
        - kind: "network view"
          data: "{{ request_view | default('BOPI-test') }}"
      tags: [always]

    - name : Assert DNS zone
      assert:
        that:
          - item.data == "lab2.ict.ptech.lu"
        fail_msg: "Not allowed to use this DNS zone."
        success_msg: "DNS zone lab2.ict.ptech.lu"
      with_items:
        - kind: "dns zone"
          data: "{{ request_zone | default('') }}"
      tags: [always]

    - name: Lookup view, container and network
      set_fact:
        infoblox_view: "{{ lookup('community.general.nios', 'view', filter={'name': request_view}, provider=nios_provider) }}"
        infoblox_network: "{{ lookup('community.general.nios', 'network', filter={'network': request_network}, provider=nios_provider) }}"
      tags: [always]

    - name: Assert network does not already exists
      assert:
        that:
          - infoblox_network | length == 0
        success_msg: "The request network does not exists, continue"
        fail_msg: "The request network {{ request_network }} already exists"
      tags: [always]

    - name: Generate attributes
      set_fact:
        request_comment: "{{ request_comment | default('') }}"
        request_description: "{{ request_description | default('Added by BOPI') }}"
      tags: [always]

    - name: Create host
      community.general.nios_host_record:
        name: "{{ record.name }}.{{ record.zone }}"
        view: "{{ record.view }}"
        ipv4addrs:
          - ipv4addr: "{{ record.ipv4 }}"
        extattrs:
            Contacts: "{{ request_requestor }}"
            Description: "{{ request_description }}"
        comment: "{{request_comment}}}}"
        state: present
        provider: "{{ nios_provider }}"
      delegate_to: localhost
      tags: [never, setup]

      - hosts: nios
  connection: local
  tasks:
    - name: configure an IPv4 host record
      nios_host_record:
        name: leaf03.ansible.com
        ipv4addrs:
          - ipv4addr:
              "{{ lookup('nios_next_ip', '192.168.100.0/24', provider=nios_provider)[0] }}"
        state: present
provider: "{{nios_provider}}"
